package com.example.myapplication

import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    private lateinit var studentNameEditText: EditText
    private lateinit var studentRollNoEditText: EditText
    private lateinit var studentGradeEditText: EditText
    private lateinit var addButton: Button
    private lateinit var readButton: Button
    private lateinit var updateButton: Button
    private lateinit var deleteButton: Button
    private lateinit var resultTextView: TextView

    private val studentList = mutableListOf<Student>()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        studentNameEditText = findViewById(R.id.studentNameEditText)
        studentRollNoEditText = findViewById(R.id.studentRollNoEditText)
        studentGradeEditText = findViewById(R.id.studentGradeEditText)
        addButton = findViewById(R.id.addButton)
        readButton = findViewById(R.id.readButton)
        updateButton = findViewById(R.id.updateButton)
        deleteButton = findViewById(R.id.deleteButton)
        resultTextView = findViewById(R.id.resultTextView)

        addButton.setOnClickListener {
            addStudent()
        }

        readButton.setOnClickListener {
            readStudent()
        }

        updateButton.setOnClickListener {
            updateStudent()
        }

        deleteButton.setOnClickListener {
            deleteStudent()
        }
    }

    private fun addStudent() {
        val name = studentNameEditText.text.toString()
        val rollNo = studentRollNoEditText.text.toString().toIntOrNull()
        val grade = studentGradeEditText.text.toString()

        if (name.isNotEmpty() && rollNo != null && grade.isNotEmpty()) {
            val student = Student(name, rollNo, grade)
            studentList.add(student)
            clearFields()
            Toast.makeText(this, "Student added successfully", Toast.LENGTH_SHORT).show()
        } else {
            Toast.makeText(this, "Please enter valid details", Toast.LENGTH_SHORT).show()
        }
    }

    private fun readStudent() {
        val rollNo = studentRollNoEditText.text.toString().toIntOrNull()

        if (rollNo != null) {
            val student = studentList.find { it.rollNo == rollNo }
            if (student != null) {
                resultTextView.text = "Name: ${student.name}, Roll No: ${student.rollNo}, Grade: ${student.grade}"
            } else {
                resultTextView.text = "Student not found"
            }
        } else {
            Toast.makeText(this, "Please enter a valid Roll No", Toast.LENGTH_SHORT).show()
        }
    }

    private fun updateStudent() {
        val rollNo = studentRollNoEditText.text.toString().toIntOrNull()
        val name = studentNameEditText.text.toString()
        val grade = studentGradeEditText.text.toString()

        if (rollNo != null && name.isNotEmpty() && grade.isNotEmpty()) {
            val studentIndex = studentList.indexOfFirst { it.rollNo == rollNo }
            if (studentIndex != -1) {
                studentList[studentIndex] = Student(name, rollNo, grade)
                clearFields()
                Toast.makeText(this, "Student updated successfully", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "Student not found", Toast.LENGTH_SHORT).show()
            }
        } else {
            Toast.makeText(this, "Please enter valid details", Toast.LENGTH_SHORT).show()
        }
    }

    private fun deleteStudent() {
        val rollNo = studentRollNoEditText.text.toString().toIntOrNull()

        if (rollNo != null) {
            val studentIndex = studentList.indexOfFirst { it.rollNo == rollNo }
            if (studentIndex != -1) {
                studentList.removeAt(studentIndex)
                clearFields()
                Toast.makeText(this, "Student deleted successfully", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "Student not found", Toast.LENGTH_SHORT).show()
            }
        } else {
            Toast.makeText(this, "Please enter a valid Roll No", Toast.LENGTH_SHORT).show()
        }
    }

    private fun clearFields() {
        studentNameEditText.text.clear()
        studentRollNoEditText.text.clear()
        studentGradeEditText.text.clear()
        resultTextView.text = ""
    }
}

data class Student(val name: String, val rollNo: Int, val grade: String)